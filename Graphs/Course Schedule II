class Solution {
    public int[] findOrder(int numCourses, int[][] prerequisites) {
        int arr[] = new int[numCourses];
        int indegree[] = new int[numCourses];
        calcIndegree(indegree,prerequisites);
        boolean vis[] = new boolean[numCourses];
        Queue<Integer> q = new LinkedList<>();
        for(int i=0;i<indegree.length;i++){
           if(indegree[i]==0){
            q.add(i);
           }
        }
        int index = 0;
        while(!q.isEmpty()){
            int curr = q.remove();
            arr[index++]=curr;
            for(int i=0;i<prerequisites.length;i++){
                if(prerequisites[i][1]==curr){
                    indegree[prerequisites[i][0]]--;
                    if( indegree[prerequisites[i][0]]==0){
                         q.add(prerequisites[i][0]);
                    }
                }
            }
        }
    return index == numCourses ? arr : new int[0];
     }
    public void calcIndegree(int[] indegree,int[][] prerequisites){
        for(int i=0;i<prerequisites.length;i++){
            indegree[prerequisites[i][0]]++;
        }
    }
}
