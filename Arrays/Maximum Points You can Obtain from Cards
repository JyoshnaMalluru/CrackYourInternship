class Solution {
    public int maxScore(int[] cardPoints, int k) {
        int n = cardPoints.length;
        int total = 0;
        for(int i=0;i<k;i++){
            total+=cardPoints[i];
        }
        int maxPoints = total;
        for(int i=0;i<k;i++){
            total+=cardPoints[n-1-i]-cardPoints[k-1-i];
            maxPoints = Math.max(total,maxPoints);
        }
        return maxPoints;
    }
}

class Solution {
    public int maxScore(int[] cardPoints, int k) {
        int lsum =0, rsum=0, maxSum = 0;
        for(int i=0;i<k;i++){
            lsum+=cardPoints[i];
        }
        maxSum = lsum;
        int rIdx = cardPoints.length-1;
        int i=k-1;
        while(i>=0){
            lsum-=cardPoints[i];
            rsum+=cardPoints[rIdx];
            rIdx--;
            i--;
            maxSum = Math.max(maxSum,lsum+rsum);
        }
        return maxSum;
    }
}
