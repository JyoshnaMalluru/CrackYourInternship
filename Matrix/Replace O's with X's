class Solution {
    static char[][] fill(char mat[][]) {
        // code here
        int m= mat.length;
        int n = mat[0].length;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if((i==m-1||i==0||j==0||j==n-1)&&mat[i][j]=='O'){
                    boundaries(mat,m,n,i,j);   
                }
            }
        }
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(mat[i][j]=='O'){
                    mat[i][j]='X';
                }
            }
        }
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(mat[i][j] =='T'){
                    mat[i][j]='O';
                }
            }
        }
        return mat;
    }
    public static void boundaries(char mat[][],int m,int n,int r,int c){
        if(r<0||c<0||r>=m||c>=n||mat[r][c]!='O'){
            return;
        }
        mat[r][c]='T';
        int dx[] = {-1,0,0,1};
        int dy[] = {0,-1,1,0};
        for(int i=0;i<4;i++){
            int x= r+dx[i];
            int y = c+dy[i];
            boundaries(mat,m,n,x,y);
        }
    }
}
