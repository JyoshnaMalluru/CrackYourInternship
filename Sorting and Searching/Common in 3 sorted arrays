class Solution {
    // Function to find common elements in three arrays.
    public List<Integer> commonElements(List<Integer> arr1, List<Integer> arr2,
                                        List<Integer> arr3) {
        // Code Here
        List<Integer> list = new ArrayList<>();
        int i=0;
        int j=0;
        int k=0;
        while(i<arr1.size() && j<arr2.size() && k<arr3.size()){
             if (arr1.get(i).equals(arr2.get(j)) && arr2.get(j).equals(arr3.get(k))) {
                  if (list.isEmpty() || !list.get(list.size() - 1).equals(arr1.get(i))) {
                    list.add(arr1.get(i));
                }
                    i++;
                    j++;
                    k++;
            }else if(arr1.get(i)<arr2.get(j)){
                    i++;
            }else if(arr2.get(j)<arr3.get(k)){
                    j++;
            }else{
                    k++;
            }
        }
        if (list.isEmpty()) {
            list.add(-1);
        }
        return list;
    }
}





//User function Template for Java

class Solution
{
    ArrayList<Integer> commonElements(int A[], int B[], int C[], int n1, int n2, int n3) 
    {
        // code here 
        ArrayList<Integer> a = new ArrayList<>();
        HashSet<Integer> b = new HashSet<>();
        HashSet<Integer> c = new HashSet<>();
        for(int i=0;i<B.length;i++){
            b.add(B[i]);
        }
        for(int i=0;i<C.length;i++){
            c.add(C[i]);
        }
        for(int i=0;i<A.length;i++){
            if(b.contains(A[i]) && c.contains(A[i])){
                if(!(a.contains(A[i]))){
                    a.add(A[i]);
                }
            }
        }
        return a;
    }
}
