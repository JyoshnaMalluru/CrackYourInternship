/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        Queue<TreeNode> q = new LinkedList<>();
        List<List<Integer>> ll = new ArrayList<>();
        if(root == null){
            return ll;
        }
        q.add(root);
        q.add(null);
        int val = 0;
        List<Integer> list = new ArrayList<>();
        while(!q.isEmpty()){
            TreeNode curr = q.remove();
            if(curr == null){
                    if(val == 1){
                        Collections.reverse(list);
                    }
                    ll.add(new ArrayList<>(list));
                    list.clear();
                if(!q.isEmpty()){
                    q.add(null);
                    val=(val==0)?1:0;
                }
            }else{
                list.add(curr.val);
                if(curr.left != null){
                    q.add(curr.left);
                }
                if(curr.right != null){
                    q.add(curr.right);
                }  
            }
        }
        return ll;
    }
}
