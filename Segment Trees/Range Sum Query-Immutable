class NumArray {
    int tree[] ;
    int nums[];
    public NumArray(int[] nums) {
        this.nums = nums;
        this.tree = new int[4*nums.length];
        helper(0,0,nums.length-1);
    }
    public void helper(int i,int si,int sj){
        if(si == sj){
            tree[i] = nums[si];
        }else{
            int mid = si+(sj-si)/2;
            helper(2*i+1,si,mid);
            helper(2*i+2,mid+1,sj);
            tree[i] = tree[2*i+1]+tree[2*i+2];
        }
    }
    public int sumRange(int left, int right) {
        return sumRangeUtil(0,0,nums.length-1,left,right);
    }
    public int sumRangeUtil(int i,int si,int sj,int qi,int qj){
        if(qj<si || qi>sj){
            return 0;
        }else if(qi<=si && qj>=sj){
            return tree[i];
        }else{
            int mid = si+(sj-si)/2;
            int left = sumRangeUtil(2*i+1,si,mid,qi,qj);
            int right = sumRangeUtil(2*i+2,mid+1,sj,qi,qj);
            return left+right; 
        }
    }
}

/**
 * Your NumArray object will be instantiated and called as such:
 * NumArray obj = new NumArray(nums);
 * int param_1 = obj.sumRange(left,right);
 */
